/**

@page Nebula2Compiling Compiling Nebula2

  - Compiling
    - @ref Nebula2CompilingOSWin32
    - @ref Nebula2CompilingOSOSX
    - @ref Nebula2CompilingOSLinux
  - Testing
    - @ref Nebula2CompilingTesting
  
@section Nebula2CompilingNote Notes

If you are familiar with Nebula 1 please read the release notes first, since a lot has changed in the build process.

At the moment, Nebula 2 will compile on Win32, Linux and Mac OSX.  However, the only @ref nGfxServer2 and @ref nInputServer currently available are @ref nD3D9Server and @ref nDI8Server for Win32.

@section Nebula2CompilingRequirements General Requirements

  - Nebula uses scripts to help build the compile files. In order to run those scripts you need Tcl8.4, which may be downloaded from <A HREF="http://www.tcl.tk">Tcl Developer Xchange</A>, <A HREF="http://tcl.sourceforge.net">Sourceforge</A>, or <A HREF="http://www.activestate.com">ActiveState</A>

@section Nebula2CompilingOSWin32 Windows

@subsection Nebula2CompilingOSWin32Requirements Additional Requirements

  - The Microsoft <A HREF="http://msdn.microsoft.com/directx">DirectX 9 SDK</A>
  - Visual C++ 6 or 7(.NET)
  
@subsection Nebula2CompilingOSWin32Preparation Preparation

  - Add nebula2/bin/win32 to your path

@subsubsection  Nebula2CompilingOSWin32PreparationVS7 Visual C++ 7

If you are using VC7 make sure the uuidgen.exe is in your path, the easiest way is to run the "Visual Studio .NET Command Prompt" (in the VStudio start menu) as your command shell, as this will set up all required paths.

@subsubsection  Nebula2CompilingOSWin32PreparationVS6 Visual C++ 6

Visual C++ 6 is unaware of the .cc file extension and a few registry edits are required per <A HREF="http://support.microsoft.com/default.aspx?scid=kb;en-us;181506">MSKB Article 181506</A>.  For more detailed instructions refer to the Knowledge Base article.

The following registry edits need to be made: <b>WARNING: Be sure you know what you are doing before editing the registry</b>.

From <b>HKEY_CLASSES_ROOT</b> create a new key named <code>'.cc'</code> (no quotes) and change the key's Default field value to 'cppfile' (no quotes).

Starting from: <b>HKEY_CURRENT_USER\\Software\\Microsoft\\DevStudio\\6.0\\</b>

Add <code>';*.cc'</code> (no quotes) to the Input_Spec field of the following:

  - Win32(ALPHA)\\Tools\\C/C++ Compiler for Alpha
  - Win32(PowerPC)\\Tools\\C/C++ Compiler for PowerPC
  - Win32(x86)\\Tools\\C/C++ Compiler for 80x86

Add <code>';cc'</code> (no quotes) to the FileExtensions field of the following:

  - Text Editor\\Tabs/Language Settings\\C/C++
  
@subsection Nebula2CompilingOSWin32BuildFiles Create The Build Files

Navigate to <code>nebula2/code/nebula2/src</code> and double click <b>update.tcl</b>.  This will create the workspace and solution files for Visual Studio.  Any time files are added or removed from Nebula 2 this step must be repeated.

The Visual Studio files are in the directory <code>nebula2/code/nebula2/vstudio.</code>

@subsection Nebula2CompilingOSWin32Compiling Compiling

Open the tools.dsw or tools.sln file in Visual Studio.  Set 'tools' to the active project and select Build->Rebuild All from the menu.  The binaries will be located in <code>nebula2/bin/win32/</code>

@section Nebula2CompilingOSOSX Mac OSX

@subsection Nebula2CompilingOSOSXPreparation Preparation

  - Add <code>nebula2/bin/macosx</code> to your path

@subsection Nebula2CompilingOSOSXBuildFiles Create The Build Files

From the command line, go to <code>nebula2/code/nebula2/src</code> and type

@verbatim
  tclsh update.tcl
@endverbatim

This will build the makefile which will be located in the current directory.  Any time files are added or removed from Nebula 2 this step must be repeated.

@subsection Nebula2CompilingOSOSXCompiling Compiling

From the command prompt in <code>nebula/code/nebula2/src/</code> type:

@verbatim
    make
@endverbatim

Or for a debug build:

@verbatim
    make debug
@endverbatim

The binaries will be located in <code>nebula2/bin/macosx/</code>

@section Nebula2CompilingOSLinux Linux

@subsection Nebula2CompilingOSLinuxRequirements Additional Requirements

  - GCC version 3.0 or later  

@subsection Nebula2CompilingOSLinuxPreparation Preparation

  - Add <code>nebula2/bin/linux</code> to your path

@subsection Nebula2CompilingOSLinuxBuildFiles Create The Build Files

From the command line, go to <code>nebula2/code/nebula2/src</code> and type

@verbatim
  tclsh update.tcl
@endverbatim

This will build the makefile which will be located in the current directory.  Any time files are added or removed from Nebula 2 this step must be repeated.

@subsection Nebula2CompilingOSLinuxCompiling Compiling

From the command prompt in <code>nebula/code/nebula2/src/</code> type:

@verbatim
    make
@endverbatim

Or for a debug build:

@verbatim
    make debug
@endverbatim

The binaries will be located in <code>nebula2/bin/linux/</code>

@section Nebula2CompilingTesting Testing Nebula2

From the command line in <code>/export/gfxlib/examples</code> type:

@verbatim
    nviewer -view torus.n2
@endverbatim

This should display a bumpy shiny donut (hit '1' to switch to 1024x768 fullscreen). }

The schwirl.n2 sample is a quick'n'dirty vertex skinning demo.

Note that the samples will not look very impressive unless you have a graphics card that can do vertex and pixel shaders 1.1 (GForce3 and up, but not GForce4MX, ATI Radeon 8500 and up). On lesser hardware the specular lighting will not work.
  
*/