-------------------------------------------------------------------------------
--  export.ms
--
--  (c)2007 Kim Hyoun Woo
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
--  It converts 3dsmax trnsform to nebula2's one and returns it by string type
--  e.g. str = nConvertTM $box01.transform
-------------------------------------------------------------------------------
fn nConvertTM m =
(
    local point3 p 
    local ret = ""

    p = m.row1
    ret += p.x as string + ","
    ret += p.z as string + ","
    ret += p.y as string + ","
    ret += "0.0,"

    -- swap z and y
    p = m.row3
    ret += p.x as string + ","
    ret += p.z as string + ","
    ret += p.y as string + ","
    ret += "0.0,"

    p = m.row2
    ret += p.x as string + ","
    ret += p.z as string + ","
    ret += p.y as string + ","
    ret += "0.0,"

    p = m.row4
    ret += p.x as string + ","
    ret += p.z as string + ","
    ret += p.y as string + ","
    ret += "1.0"

    return ret
)

-------------------------------------------------------------------------------
--
-------------------------------------------------------------------------------
fn nStripPrefix str =
(
    ret = ""
    cnt = str.count
    for i=2 to cnt do
    (
        ret += str[i]
    )
    return ret
)


-- the below 'parse.ms' file is automatically generated by runing build.py
include "mangalore/parse.ms"

-------------------------------------------------------------------------------
--  Export entities.
-- 
-------------------------------------------------------------------------------

fn mlExport = 
(
    try
    (
        local database  = ""

        -- check the rootnode has custom attribute which name of it is "MangaloreDatabase".
        numCustAttr = custAttributes.count rootNode
        foundIndex = -1
		
        -- check that the object already has the given custom attribute.
        for i = 1 to numCustAttr do
        (
            -- retrieves the attribute definition for a given custom attribute 
            -- set in an object
            attrDef = custAttributes.getdef rootNode i
            if attrDef != undefined and attrDef.name == "MangaloreDatabase" do
            (
                -- the object already has custom attribute.
                foundIndex = i
            )
        ) 

        -- no database is opened, any database should be opened before we export a scene.
        if (foundIndex == -1) then
        (
            msg = "No database is opened, any database should be opened before a scene is exported."
            messageBox msg title:"Warning"
            return ""
        )
        else
        (
            -- retrieve database from roonode's custom attribute
            database = (rootNode.mlDatabase as string)
        )

        if database == "" do
        (
            print "Error: Unexpected behavior. Database is exist but we cannot retrieve its name.\n"
            return ""
        )

        --FIXME: export entities only at the moment. 
        local tablename = "_Entities"

        for obj in objects do
        (
            if ((classof obj) == XRefObject) then
            (
                -- retrieve columns and values of the given node.
                inargs = nParseMangaloreEntity obj 

                -- insert values to database.
                nInsertRow database tablename inargs[1] inargs[2]
            )
            else
            (
                format "WARNING: %s is not a XRef object.\n" obj.name to:listener
            )
        )
    )
    catch
    (
        format "ERROR: Unexpected error when export % \n" obj.name to:listener
    )
)

-------------------------------------------------------------------------------
-- EOF
-------------------------------------------------------------------------------
