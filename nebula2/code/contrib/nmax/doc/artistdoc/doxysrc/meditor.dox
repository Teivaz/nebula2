/**
    @defgroup NMaxHowtoUsingMaterialEditor Using Material Editor

    @section NMaxHowtoMEditorOverview Overview

    Nebula2 uses standard D3D FX files as its shader file format. FX files define 
    all necessary render states, texture unit states, vertex/pixel shader programs 
    and allow fallback paths for older hardware.


    @section NMaxHowtoMEditorMaterialEditor The Nebula2 Custom Material Editor 

    @image html meditor01.png

    Click @b Standard 3DS Max shader button. It will show up <b>Material/Map Browser</b>
    dialog.

    @image html meditor02.png

    Select @b Nebula2 material and click 'Ok' button.

    @image html meditor03.png
    
    This will bring <b>Nebula2 custom material editor</b> to you. Defaultly, there is
    'None' for <b>Nebula2 Shader Types</b> rollout panel and nothings for <b>Parameters</b> 
    rollout.
    
    Select any one of the shaders in dropdown listbox and then its parameters will come 
    out.
    

    @section NMaxHowtoMEditorOverviewExistingShaders Overview of Exsting Shaders

    The toolkit comes from the current CVS. You are encouraged to add your own shaders, 
    or even implement a completely new shader library.

    - <b>Standard</b> the default shader with ambient, diffuse and specular lighting 
      components, alpha testing, one color texture and one bump texture
    - <b>Standard Skinned</b> the standard shader for smooth skinned characters skins; 
      implements vertex skinning completely on the GPU. See Characters for details.
    - <b> Standard Alpha</b> the standard alpha blended shader. Allows setting source and 
      destination blend factors directly (additive blending would be Source=One 
      Dest=One; normal alpha blending is Source=SrcAlpha, Dest=InvSrcAlpha)
    - <b>Standard Alpha(2 Layers)</b> a 2-layered transparent shader
    - <b>Standard Blended</b> the standard shader for blend shapes. Assigning a blend shape 
      shader to a geometry indicates to the plugin that the geometry should be exported 
      as a blend shape. See Blend Shapes for details.
    - <b>Standard Layered</b> this a 4 layer shader for terrains (rather inefficient at the 
      moment, since it uses 4 passes.
    - <b>Standard Lightmapped</b> this is a shader for lightmapped geometry. 
    - <b>Leaf</b> this is a shader which implements dynamic sprite leafs in a tree crown, 
    - <b>Tree</b> this is a shader for geometry which should swing in the wind, like trees, 
      bushes etc.     
    - <b>Ocean</b> a DX9-only ocean shader ported from an NVIDIA example shader
    - <b>Skybox</b>, <b>Cubemapped Skybox</b>, <b>Particle (Additive)</b> and <b>Particle 
      (Alpha Blended)</b> are OBSOLETE shaders


    @section NMaxHowtoMEditorShaderXMLFile Shaders and the shader.xml file

    Shader files reside under <b>"home:data/shaders</b>. Each supported render path has its 
    own subdirectory where the actual FX files are located (2.0 for DX9 shaders, @b fixed for 
    fixed function DX7 shaders). Common shader files are located in the @b lib subdirectory.
    
    The <b>shaders.xml</b> file describes the shader properties for the 3DS Max toolkit plugin, 
    for instance which shader attributes exist, which shader attributes should be shown 
    in the Material Editor, what their data types and default values are, etc.

    To add a new shader to the shader library:

        - first create a new FX file which contains the shader's render states, texture unit 
          configurations and vertex/pixel shader programs
        - add a new shader entry to the shaders.xml file and describe the shader parameters 
          for the 3DS Max plugin
        - add a new entry to the renderpath.xml file in proj:data/shaders/2.0 and 
          proj:data/shaders/fixed
        - finally restart 3DS Max so that shaders.xml is re-parsed

    That's all there is to adding a new shader. 

*/
