package Hello;

import System.*;
import Nebula2NET.*;

public class Hello
{
	public static void main(String[] args)
	{
		// Note: a NOH name can only be set via ctor!
		// Note: The ctor takes a NOH name as a parameter.
		// You can use either a full path, starting with '/'
		// or a relative path, relative to nebula's cwd!
		// Note: The ctor only creates a new nebula(c++) object
		// if it does not already exist in the nebula NOH, otherwise
		// the ctor returns the existing nebula(c++) object!
		// Note: The ctor throws an exception if the type of the 
		// nebula(j#.net) object does not match the type of 
		// the existing nebula(c++) object!
		nroot foo = new nroot("/");
				
		System.out.println(foo.getclass());
	        
		ntimeserver timeserver = new ntimeserver("/sys/servers/time");
		System.out.println(timeserver.gettime());

		//create some nroot objects
		nroot bar = new nroot("/hallo/spencer");
		bar = new nroot("/hallo/lory");
		bar = new nroot("hallo");

		// This is really an array of nroot objects
		// Note: you could replace the next code line with:
		// nroot[] children = (nroot[])bar.getchildren();
		Object[] children = bar.getchildren();
			
		if(children.length > 0)
			System.out.println("Children:");
	
		for(int i = 0; i < children.length; i++)
		{
			nroot child = (nroot)children[i];
			System.out.println(child.getname());
		}
			
		if(foo.isa("nroot"))
			System.out.println("foo is an nroot!");
			
		if(!foo.isa("ntimeserver"))
			System.out.println("foo is not a timeserver!");
	}
}
