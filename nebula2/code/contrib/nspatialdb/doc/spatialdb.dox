/**
    @defgroup NSpatialDBContribModule Spatial Database Contrib Module
    @ingroup NebulaContribModules
    @brief Basic spatial database for visibility and spatial region queries.

The spatialdb
includes various nodes for visibility (portals and occluders) as well as
hierarchy (nested spatial data structures such as octrees and kd-trees).
Once you have constructed your objects in space, you can perform
spatial and visibility queries.

Spatial queries allow you to figure out what elements are in a specific
region, specified possibly as a bounding box or sphere.

Visibility queries allow you to figure out what elements are visible
from a certain point, culled by either a maximum distance or by a view frustum.
This allows you to find visible objects to pass on to a chunk of AI or
rendering code.

The entire system is built on top of @ref nOctree for fast collection
of objects in a specific space; then sectors and portals are used to take
advantage of visibility information to quickly determine visible sets of
objects if you are doing a visibility query.

nSpatialSector is a space containing multiple spatial elements, used for
organizing things in a specific space.  Typically a sector represents a
finite space where all elements can see the entire sector, and have
limited visibility to other sectors.  An example of a typical sector
would be one room or hallway in a building.

nSpatialPortal is an element describing visibility between two sectors.
The visibility determination uses portals to determine which sectors
are visible from other sectors.  An example of a typical portal would
be the doors and windows connecting rooms, and the openings between
rooms and hallways.

nSpatialElement is an element that you want to place under the database
for visibility and spatial queries.

nVisibilityVisitor is a query class that lets you figure out what
elements are visible.  Depending on the specific subclass you use, you
can check what elements are visible in a view frustum (useful for camera
rendering) or perhaps everything visible in a sphere around a specific
point (useful for AI or LOS determination).

nSpatialVisitor is a query class that lets you figure out what elements
are in a specific spatial region.  Note that this is fundamentally
different than a visibility query, since for a spatial query you
basically ignore elements that provide visibility information
(occluders and portals).  Different visitors support different
region shapes.

*/

