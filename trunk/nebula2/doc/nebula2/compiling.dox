/**

@page Nebula2Compiling Compiling Nebula2

  - Compiling
    - @ref Nebula2CompilingOSWin32
    - @ref Nebula2CompilingOSOSX
    - @ref Nebula2CompilingOSLinux
  - Testing
    - @ref Nebula2CompilingTesting
  
@section Nebula2CompilingNote Notes

If you are familiar with Nebula 1 please read the @ref Nebula2InitialReleaseNotes first, since a lot has changed in the build process.

At the moment, Nebula 2 will compile on Win32, Linux and Mac OSX.  However, the only @ref nGfxServer2 and @ref nInputServer currently available are @ref nD3D9Server and @ref nDI8Server for Win32.

@section Nebula2CompilingRequirements General Requirements

  - Nebula uses scripts to help build the compile files. In order to run those scripts you need Tcl8.4, which may be downloaded from <A HREF="http://www.tcl.tk">Tcl Developer Xchange</A>, <A HREF="http://tcl.sourceforge.net">Sourceforge</A>, or <A HREF="http://www.activestate.com">ActiveState</A>

@section Nebula2CompilingOSWin32 Windows

@subsection Nebula2CompilingOSWin32Requirements Additional Requirements

  - Win2k or WinXP (other Win32 platforms may work but have not been tested)
  - The Microsoft <A HREF="http://msdn.microsoft.com/directx">DirectX 9 SDK</A>, including 
  - The <A HREF="http://www.microsoft.com/downloads/details.aspx?FamilyId=9216652F-51E0-402E-B7B5-FEB68D00F298&displaylang=en">"Summer Update"</A>.
  - Visual C++ 6 or 7(.NET)

If you are using Visual C++ 6, then you will need an updated <a href="http://www.microsoft.com/msdownload/platformsdk/sdkupdate/default.htm">Core SDK</a> from Microsoft.  Without this, Nebula will fail to compile due a missing @c shfolder.h.
  
@subsection Nebula2CompilingOSWin32Preparation Preparation

  - Add @c nebula2/bin/win32 to your path
  - Under "Tools->Options->Projects->VC++ Directories" make sure that the DX9 libs and
    include directories are before VStudio's lib and include directory paths.

@subsubsection  Nebula2CompilingOSWin32PreparationVS7 Visual C++ 7

If you are using VC7 make sure the @c uuidgen.exe (usually found at Microsoft Visual Studio .NET 2003\\Common7\\Tools) is in your path.  The easiest way is to run the "Visual Studio .NET Command Prompt" (in the VStudio start menu) as your command shell, as this will set up all required paths.

@subsubsection  Nebula2CompilingOSWin32PreparationVS6 Visual C++ 6

Visual C++ 6 is unaware of the @c .cc file extension and a few registry edits are required per <A HREF="http://support.microsoft.com/default.aspx?scid=kb;en-us;181506">MSKB Article 181506</A>.  For more detailed instructions refer to the Knowledge Base article.

The following registry edits need to be made: <b>WARNING: Be sure you know what you are doing before editing the registry</b>.

From <b>HKEY_CLASSES_ROOT</b> create a new key named <code>'.cc'</code> (no quotes) and change the key's Default field value to 'cppfile' (no quotes).

Starting from: <b>HKEY_CURRENT_USER\\Software\\Microsoft\\DevStudio\\6.0\\</b>

Add <code>';*.cc'</code> (no quotes) to the Input_Spec field of the following:

  - Win32(ALPHA)\\Tools\\C/C++ Compiler for Alpha
  - Win32(PowerPC)\\Tools\\C/C++ Compiler for PowerPC
  - Win32(x86)\\Tools\\C/C++ Compiler for 80x86

Add <code>';cc'</code> (no quotes) to the FileExtensions field of the following:

  - Text Editor/Tabs/Language Settings/C/C++

Make sure that you've installed the updated Core SDK as described above.
  
@subsection Nebula2CompilingOSWin32BuildFiles Create The Build Files

Navigate to <code>nebula2/</code> and double click <code>update.tcl</code>.  This will use the <code>.bld</code> files to create the workspace and solution files for Visual Studio, in the directory <code>nebula2/build/vstudio##</code>.  Anytime files are added or removed from Nebula 2 this step must be repeated.  You can tell that <code>update.tcl</code> has completed successfully when it pops up a featureless grey window.

@subsection Nebula2CompilingOSWin32Compiling Compiling

Open the Nebula2.dsw or Nebula2.sln in the directory that corresponds to your version of Visual Studio.  Set 'buildall' to the active project and select Build->Rebuild All from the menu.  The binaries will be located in <code>nebula2/bin/win32/</code>, or <code>nebula2/bin/win32d/</code> for debug versions.

  
@subsection Nebula2CompilingOSWin32Troubleshooting Troubleshooting

  - The IDE doesn't recognize .cc files as c++ source in VS7.1: 

Open Studio, go to Tools...Options...Projects...VC++ Build...C/C++ File Extensions and add .cc. 

  - <code>LINK : fatal error LNK1104: cannot open file 'libci.lib'</code> 

Insert <code>/NODEFAULTLIB:libci.lib</code> every time <code>AdditionalOptions=\"/MACHINE:IX86</code> occurs in <code>makesln.tcl</code>.  I don't know if there's a reason why this isn't included in the file already -- is there a better way to avoid this error? 

  - <code>update.tcl</code> isn't producing .sln files under VS7.x 

Make sure that uuidgen.exe is in your path. 

  - <code>update.tcl</code> doesn't complete successfully (fails to pop up its grey window)

<code>update.tcl</code> has probably choked on a bad build file.  I believe you can get slightly better debugging information for this case by running it from the command line, with <code>tclsh84 update.tcl</code>.

  - The nmake fails 

You may need to set up the Visual Studio environment variables. You can do this by running the VCVARS32.BAT batch file, which usually exists in a directory like C:\\Program Files\\Microsoft Visual Studio\\VC98\\Bin\\. If you get errors while running that batch file about being out of environment space, please see <A HREF="http://support.microsoft.com/default.aspx?scid=KB;EN-US;Q230205&">this</A>.

  - A header @c shfolder.h is missing.

This usually happens to users of Visual Studio 6 who have not installed the updated Core SDK as described above.

  - <code>error C2660: 'D3DXCreateFont' : function does not take 12 parameters</code>

Get the DirectX 9 SDK "Summer Update", as described above.

  - misc: install paths containing spaces have not been tested and may result in, uhm, "unexpected behaviour".


@section Nebula2CompilingOSOSX Mac OSX

@subsection Nebula2CompilingOSOSXPreparation Preparation

  - If you are using Panther (10.3), Apple has included TCL 8.4 so you
    will not need to worry about installing this yourself.

  - Add <code>nebula2/bin/macosx</code> to your path

@subsection Nebula2CompilingOSOSXBuildFiles Create The Build Files

From the command line, go to <code>nebula2/</code> and type

@verbatim
  tclsh update.tcl
@endverbatim

This will build the XCode projects which will be located in the @c nebula2/build/xcode directory.  Any time files are added or removed from Nebula 2 this step must be repeated.

@subsection Nebula2CompilingOSOSXCompiling Compiling

Open the Xcode projects found in @c nebula2/build/xcode and build them.

The binaries will be located in <code>nebula2/bin/macosx/</code>.

@section Nebula2CompilingOSLinux Linux

@subsection Nebula2CompilingOSLinuxRequirements Additional Requirements

  - GCC version 3.0 or later  

@subsection Nebula2CompilingOSLinuxPreparation Preparation

  - Add <code>nebula2/bin/linux</code> to your path

@subsection Nebula2CompilingOSLinuxBuildFiles Create The Build Files

We are transitioning entirely over to the new build system, so there is currently no way to build on Linux.  This situation will be changing soon.

@subsection Nebula2CompilingOSLinuxCompiling Compiling

We are transitioning entirely over to the new build system, so there is currently no way to build on Linux.  This situation will be changing soon.

@section Nebula2CompilingTesting Testing Nebula2

From the command line in <code>/export/gfxlib/examples</code> type:

@verbatim
    nviewer -view torus.n2
@endverbatim

This should display a bumpy shiny donut (hit '1' to switch to 1024x768 fullscreen, hit '2' to return to windowed mode).

The @c schwirl.n2 sample is a quick'n'dirty vertex skinning demo.

The DX9 HLSL shader files are in @c /export/shaders/dx9

Note that the samples will not look very impressive unless you have a graphics card that can do vertex and pixel shaders 1.1 (GeForce3 and up, but not GeForce4MX, ATI Radeon 8500 and up). On lesser hardware the specular lighting will not work.
*/

