/**
    @defgroup NOpenALContribModule nOpenAL
    @ingroup NebulaContribSoundModules
    @ingroup NebulaAudioSystem

    This section of the documentation covers Nebula OpenAL contributed audio system.
    Refer <a href="http://www.openal.org/">OpenAL</a> site to know more about 
    the OpenAL SDK.

      - @ref NOpenALContribModuleIntroduction
      - @ref NOpenALContribModuleInstallation
      - @ref NOpenALContribModuleUsage
      - @ref NOpenALContribModuleChangeLog
    

    @section NOpenALContribModuleIntroduction Introduction

    nOpenAL is a wrapper around
    <a href="http://www.openal.org/">OpenAL</a> that implements the
    @ref NebulaAudioSystem interface.


    @section NOpenALContribModuleInstallation Installation

    This module should be checked out to <tt>nebula2/code/contrib/nopenal</tt>,
    and run <tt>nebula2/update.tcl</tt>.


    @section NOpenALContribModuleUsage Usage

    See @ref NebulaAudioSystemUsage section to know overall usage of the Nebula
    audio server.
 
    @subsection NOpenALContribModuleUsageCreating Audio Server Initialization

    The first thing to do to use <tt>nopenal</tt> audio server is to create the
    audio server.

    @code
    nOpenALServer* audioServer = (nOpenALServer*)kernelserver->New("nopenalserver", 
                                                                   "/sys/servers/audio");
    @endcode

    Call nOpenALServer::Open() to initialize the created audio server like the 
    following code:
    @code
    audioServer->Open();
    @endcode

    @subsection NOpenALContribModuleUsageLoad Sound Playing

    To play a sound, the first thing you to do is to create a OpenAL sound object.
    The OpenAL sound object can be created by calling nOpenALServer::NewSound() 
    function. Then you should load actual sound file into the created sound object. 
    See the following code:
    @code
    nOpenALObj* soundObject = (nOpenALObj*)nOpenALServer::Instance()->NewSound(); 

    soundObject->SetName(rsrcname);
    soundObject->SetFilename(filename);
    soundObject->Load();
    @endcode

    To play the loaded sound, just call nOpenALServer::StartSound() function with
    the created sound object:
    @code
    nOpenALServer::Instance()->StartSound(soundObject);
    @endcode

    @subsection NOpenALContribModuleUsageUpdateValues Update Sound Values 
    ...

    @subsection NOpenALContribModuleUsageShutdown Shutdown

    When the application is closing, the audio server should be shutdown 
    by calling its nOpenALServer::Close() member function:
    @code
    audioServer->Close();
    @endcode


    @section NOpenALContribModuleChangeLog Change Log  

      -13-July-05 <i>Kim, Hyoun Woo</i> updated to make it compatible and run with
                                        CVS. Thanks Nikolai Baklanov for this correcting. 

    (c) 2004 Bang, Chang Kyu
*/

/**
    @defgroup NOpenALDemoContribModule nOpenAL Demo
    @ingroup NOpenALContribModule
    @ingroup NebulaContribSampleModules

    @brief A small example of how to use nOpenAL for positional audio and music.

    @section NOpenALDemoContribModuleRunDemo Running the Demo

    The demo plays an ogg vorbis file; to make sure you are able to play
    ogg vorbis, make sure the dll's in the nOpenAL dll directory are in your
    path.  You can either add code/contrib/nopenal/dll to your path, or copy
    the OpenAL dll's into your current path.  A good place to put them is
    the same place as the nopenaldemo, which is typically bin/win32 or
    bin/win32d in the nebula2 distribution.


    @section NOpenALDemoContribModuleChangeLog Change Log  

      -13-July-05 <i>Kim, Hyoun Woo</i> rewrote the demo app based on naplication pacakge 
                                        with appwiz. 

*/
